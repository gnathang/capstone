{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielnathan/WEBSITES/crwn-clothing/src/routes/navigation/navigation.component.jsx\",\n    _s = $RefreshSig$();\n\n// Fragment is essentially a component that renders to nothing when mounted on the DOM\n// We use it because we have a top level 'containing' component to nest other components.\nimport { Fragment, useContext } from 'react';\nimport { Outlet, Link } from 'react-router-dom';\nimport { ReactComponent as CrwnLogo } from '../../assets/crown.svg';\nimport { UserContext } from '../../contexts/user.context';\nimport './navigation.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navigation = () => {\n  _s();\n\n  //  useContext as a hook tells this component 'whenever a value inside of this context updates,\n  //  re-render me please. Because we're leveraging this currentUser value, leveraged by useContext,\n  //  which leverages the useState hook, which calls the setter function.\n  // in the nav comp we want the currentUser value. In the sign-in, we want to set it;\n  // call useContext on UserContext.\n  const {\n    currentUser\n  } = useContext(UserContext);\n  console.log(currentUser);\n  return (\n    /*#__PURE__*/\n    // use Fragment instead of a wrapping div\n    _jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"logo-container\",\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(CrwnLogo, {\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-links-container\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav-link\",\n            to: \"/shop\",\n            children: \"SHOP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"nav-link\",\n            to: \"/auth\",\n            children: \"SIGN IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Navigation, \"3CHVfvdogVMdIKctk02PXQKNcBM=\");\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"names":["Fragment","useContext","Outlet","Link","ReactComponent","CrwnLogo","UserContext","Navigation","currentUser","console","log"],"sources":["/Users/gabrielnathan/WEBSITES/crwn-clothing/src/routes/navigation/navigation.component.jsx"],"sourcesContent":["// Fragment is essentially a component that renders to nothing when mounted on the DOM\n// We use it because we have a top level 'containing' component to nest other components.\nimport { Fragment, useContext } from 'react';\nimport { Outlet, Link } from 'react-router-dom';\n\nimport { ReactComponent as CrwnLogo } from '../../assets/crown.svg' ;\nimport { UserContext } from '../../contexts/user.context';\n\nimport './navigation.styles.scss';\n\nconst Navigation = () => {\n  //  useContext as a hook tells this component 'whenever a value inside of this context updates,\n  //  re-render me please. Because we're leveraging this currentUser value, leveraged by useContext,\n  //  which leverages the useState hook, which calls the setter function.\n  \n  // in the nav comp we want the currentUser value. In the sign-in, we want to set it;\n  // call useContext on UserContext.\n  const { currentUser } = useContext(UserContext);\n  console.log(currentUser);\n  return (\n    // use Fragment instead of a wrapping div\n    <Fragment> \n      <div className='navigation'>\n\n        <Link className='logo-container' to='/'>\n          <CrwnLogo className='logo' />\n        </Link>\n        \n        <div className='nav-links-container'>\n          <Link className='nav-link' to='/shop'>\n            SHOP\n          </Link>\n          <Link className='nav-link' to='/auth'>\n            SIGN IN\n          </Link>\n        </div>\n\n      </div>\n      <Outlet />\n    </Fragment>\n  );\n}\n\nexport default Navigation;  "],"mappings":";;;AAAA;AACA;AACA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,kBAA7B;AAEA,SAASC,cAAc,IAAIC,QAA3B,QAA2C,wBAA3C;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,OAAO,0BAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB;EACA;EACA;EAEA;EACA;EACA,MAAM;IAAEC;EAAF,IAAkBP,UAAU,CAACK,WAAD,CAAlC;EACAG,OAAO,CAACC,GAAR,CAAYF,WAAZ;EACA;IAAA;IACE;IACA,QAAC,QAAD;MAAA,wBACE;QAAK,SAAS,EAAC,YAAf;QAAA,wBAEE,QAAC,IAAD;UAAM,SAAS,EAAC,gBAAhB;UAAiC,EAAE,EAAC,GAApC;UAAA,uBACE,QAAC,QAAD;YAAU,SAAS,EAAC;UAApB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAFF,eAME;UAAK,SAAS,EAAC,qBAAf;UAAA,wBACE,QAAC,IAAD;YAAM,SAAS,EAAC,UAAhB;YAA2B,EAAE,EAAC,OAA9B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAIE,QAAC,IAAD;YAAM,SAAS,EAAC,UAAhB;YAA2B,EAAE,EAAC,OAA9B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAiBE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAjBF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAsBD,CA/BD;;GAAMD,U;;KAAAA,U;AAiCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}